# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]

description = Solves all kinds of geographical position calculations.
author = Per A. Brodtkorb
author_email = per.andreas.brodtkorb@gmail.com
license = Simplified BSD
license_file = LICENSE.txt
url = https://github.com/pbrod/nvector/
long_description = file: README.rst, CHANGELOG.rst, LICENSE.txt, THANKS.rst
long_description_content_type = text/x-rst
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Environment :: Console
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Operating System :: POSIX :: Linux
    Operating System :: Unix
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: GIS

[options]
zip_safe = False
include_package_data = True  # include everything in source control + MANIFEST.in
# src layout:
package_dir =
     =src
packages = find:

[options.packages.find]
where = src


[test]
# py.test options when running `python setup.py test`
addopts = src/nvector
          src/nvector/tests

[tool:pytest]
doctest_optionflags = NORMALIZE_WHITESPACE ELLIPSIS
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    -rsxXf
#    --pyargs nvector
    --doctest-modules
#    --pep8
#    --codestyle  # python 3.4>

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')

norecursedirs =
    .*
    _build
    docs
    tmp*

pep8ignore =
    W503
    info.py ALL
    conftest.py ALL
    setup.py ALL
#    tests/*.py ALL

pep8maxlinelength = 110
# codestyle_max_line_length = 110
# codestyle_ignore = W503

[pycodestyle]
count = False
ignore = 
#         E41,  # import: multiple imports on one line, module level import not at top
#         E121, # continuation line under-indented for hanging indent
#         E123, # closing bracket does not match indentation of opening bracket's line
#         E126, # continuation line over-indented for hanging indent
#         E133, # closing bracket is missing indentation
#         E226, # missing whitespace around arithmetic operator
#         E241, # multiple spaces after ','
#         E242, # tab after ','
#         E302, # expected 2 blank lines, found 1
         W503, # expect line breaks after binary operator
#         W504, # expects line breaks before binary operators
#         E704, # multiple statements on one line (def)
max-line-length = 110
statistics = True
exclude = 
    _info.py
    conftest.py
    setup.py
    licence.py

[aliases]
docs = build_sphinx
test = pytest

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
format =
    bdist_wheel
    sdist

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
